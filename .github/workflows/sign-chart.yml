name: sign-chart

on:
  workflow_call:
    inputs:
      chart:
        description: Name of the helm chart to sign
        required: true
        type: string
      gpg_key_id:
        description: ID for the key to be used for signing
        required: false
        type: string
        default: security@ni.com
      repository_name:
        description: The name of the helm repository
        required: false
        default: rds-hlm
        type: string
      repository_path:
        description: The path of the chart within the repository
        required: false
        default: '/'
        type: string
      repository_url:
        description: URL for the helm repository 
        required: false
        default: https://niartifacts.jfrog.io/artifactory/rds-hlm
        type: string
      version:
        description: Version of the helm chart to sign
        required: true
        type: string
    secrets:
      GPG_PRIVATE_KEY:
        description: Base 64 encoded gpg private key to use for signing
        required: true
      REPOSITORY_USERNAME:
        description: The username to connect to the helm repository
        required: true
      REPOSITORY_TOKEN:
        description: The token to connect to the helm repository
        required: true

jobs:
  sign-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Sign into helm
        run: helm repo add ${{ inputs.repository_name }} ${{ inputs.repository_url }} --username ${{ secrets.REPOSITORY_USERNAME }} --password ${{ secrets.REPOSITORY_TOKEN }}
      - name: Update helm repo
        run: helm repo update
      - name: Download chart
        run: helm pull ${{ inputs.repository_name }}/${{ inputs.chart }} --version ${{ inputs.version }}
      - name: Install helm-sign
        run: pipx install 'helm-sign==0.1.2'
      - name: Create gnupghome directory
        run: mkdir ${{ runner.temp }}/gpg && chmod 700 ${{ runner.temp }}/gpg
      - name: Import private key
        run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --import
        env:
          GNUPGHOME: ${{ runner.temp }}/gpg
      - name: Sign chart
        run: helm-sign --key ${{ inputs.gpg_key_id }} ${{ inputs.chart }}-${{ inputs.version }}.tgz
        env:
          GNUPGHOME: ${{ runner.temp }}/gpg
      - name: Publish providence file
        run: |
          OUTPUT_FILE=$(mktemp)
          HTTP_CODE=$(curl --silent --output $OUTPUT_FILE --write-out "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.REPOSITORY_TOKEN }}" \
            -T ${{ inputs.chart }}-${{ inputs.version }}.tgz.prov \
            "${{ inputs.repository_url }}${{ inputs.repository_path }}${{inputs.chart }}-${{ inputs.version }}.tgz.prov")
          if [[ ${HTTP_CODE} -lt 200 || ${HTTP_CODE} -gt 299 ]]; then
            >&2 cat $OUTPUT_FILE
            exit 22
          fi
          cat $OUTPUT_FILE
          rm $OUTPUT_FILE
